---
title: "Biostat 212a Homework 2"
subtitle: "Due Feb 8, 2025 @ 11:59PM"
author: "Jiaye Tian and 306541095"
date: "`r format(Sys.time(), '%d %B, %Y')`"
format:
  html:
    theme: cosmo
    embed-resources: true
    number-sections: true
    toc: true
    toc-depth: 4
    toc-location: left
    code-fold: false
engine: knitr
knitr:
  opts_chunk: 
    fig.align: 'center'
    # fig.width: 6
    # fig.height: 4
    message: FALSE
    cache: false
---

## ISL Exercise 4.8.1 (10pts)
```{r, echo=FALSE, results="asis"}
library(knitr)
cat(sprintf('![](%s)', image_uri("4.8.1.jpeg")))
```
## ISL Exercise 4.8.6 (10pts)
```{r, echo=FALSE, results="asis"}
library(knitr)
cat(sprintf('![](%s)', image_uri("4.8.6.jpeg")))
```
## ISL Exercise 4.8.9 (10pts)
```{r}
library(dplyr)
library(ggplot2)

data.frame(prob = seq(0, 0.99, 0.01)) %>%
  mutate(odds = prob / (1 - prob)) %>%
  ggplot(aes(x = prob, y = odds)) + 
  geom_point() + 
  geom_line() + 
  geom_vline(xintercept = 0.5, col = "red") +
  geom_hline(yintercept = 1, col = "red") + 
  coord_cartesian(ylim = c(0, 20)) + 
  labs(x = "p", 
       y = "Odds: p / (1 - p)", 
       title = "Odds vs Probability Relationship")
```
```{r, echo=FALSE, results="asis"}
library(knitr)
cat(sprintf('![](%s)', image_uri("4.8.9.jpeg")))
```
## ISL Exercise 4.8.13 (a)-(i) (50pts)
(a)
```{r}
library(dplyr)
library(readr)
library(ISLR)
library(caret)
Weekly <- read.csv("~/212a/slides/data/Weekly.csv")

summary(Weekly)
```
```{r}
pairs(Weekly[ ,-9])
```
```{r}
cor(subset(Weekly, select = -Direction))
```
As we would expect with stock market data, there are no obvious strong relationships between the Lag variables. However, there do appear to be some interesting trends over time. I create the Week variable below, allowing for easier plotting of trends, since there is a chronology to the rows that is not shown fully through the Year variable.
```{r}
Weekly$Week <- 1:nrow(Weekly)

year_breaks <- Weekly %>%
  group_by(Year) %>%
  summarize(Week = min(Week))

ggplot(Weekly, aes(x = Week, y = Volume)) + 
  geom_line() + 
  geom_smooth() + 
  scale_x_continuous(breaks = year_breaks$Week, minor_breaks = NULL, labels = year_breaks$Year) + 
  labs(title = "Average Daily Shares Traded vs Time", 
       x = "Time") + 
  theme_light()
```
Looking at Volume over time, there has been a significant increase in the volume of shares traded since the 90’s. This appears to have peaked around 2009, starting to decrease in 2010. it would be interesting to see the S&P 500 stats since then.
```{r}
ggplot(Weekly, aes(x = Year, fill = Direction)) + 
  geom_bar(position = "fill") +
  geom_hline(yintercept = 0.5, col = "red") +
  scale_x_continuous(breaks = seq(1990, 2010), minor_breaks = NULL) +
  scale_y_continuous(labels = scales::percent_format()) +
  theme_light() + 
  theme(axis.title.y = element_blank(), 
        legend.position = "bottom") + 
  ggtitle("% of Up/Down Weeks vs Time")
```
Here is Direction over time, which is less interesting. There appear to only be 4 years in which >= 50% of the weeks didn’t see a positive return (2000, 2001, 2002, 2008).

The split of the weeks into Down & Up can be seen in the table below. We could get a classifier with 55.56% accuracy simply by predicting the S&P 500 return will be positive every week.
```{r}
prop.table(table(Weekly$Direction))
```

```{r}
ggplot(Weekly, aes(x = Week, y = Today / 100)) + 
  geom_line() + 
  scale_x_continuous(breaks = year_breaks$Week, minor_breaks = NULL, labels = year_breaks$Year) + 
  scale_y_continuous(labels = scales::percent_format(), breaks = seq(-0.2, 0.2, 0.05)) + 
  geom_hline(yintercept = 0, col = "red") +
  theme_light() + 
  labs(title = "Weekly Percentage Return vs Time", 
       x = "Time", 
       y = "Percentage Return")
```
We can also see that the market seems to go through periods of higher variance/instability. Crashes (e.g. Sept. 2008) stand out here.

(b)
```{r}

Weekly$Direction <- factor(Weekly$Direction, levels = c("Down", "Up"))

Weekly_fits<-glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, data=Weekly, family=binomial)
summary(Weekly_fits)
```
Based on the summary, Lag2 appears to be the only variable that is statistically significant.

(c)
```{r}
weekly_probs <- predict(Weekly_fits, type = "response")
weekly_pred <- rep("Down", 1089)
weekly_pred[weekly_probs >.5]= "Up"
table(weekly_pred, Weekly$Direction)

(557+54)/1089

557/(557+48)

(54)/(54+430)
```
Based on the results of the confusion matrix, in general we predicted the weekly trend correctly 56.11% of the time. However, we correctly predicted when the trend would go up 92.07% of the time, while only correctly predicting when it would go down 11.16% of the time.

(d)
```{r}
train = (Weekly$Year<2009)
Weekly_2009 <-Weekly[!train,]
Weekly_fits<-glm(Direction~Lag2, data=Weekly,family=binomial, subset=train)
Weekly_prob= predict(Weekly_fits, Weekly_2009, type = "response")
Weekly_pred <- rep("Down", length(Weekly_prob))
Weekly_pred[Weekly_prob > 0.5] = "Up"
Direction_2009 = Weekly$Direction[!train]
table(Weekly_pred, Direction_2009)

mean(Weekly_pred == Direction_2009)
```
```{r}
56/(56+5)

9/(9+34)
```
After fitting the logistic regression model using training data with Lag2 as its only predictor, the model accurately predicted the outcome 62.5% of the time. This model also correctly predicted the trend would up 91.80% and correctly predicted the trend would go down 20.93% of the time, which is a slight improvement from the previous model.

(e)
```{r}
library(MASS)
Weeklylda_fit<-lda(Direction~Lag2, data=Weekly,family=binomial, subset=train)
Weeklylda_pred<-predict(Weeklylda_fit, Weekly_2009)
table(Weeklylda_pred$class, Direction_2009)

mean(Weeklylda_pred$class == Direction_2009)
```
Using the LDA to develop the model gave the exact same results as the logistic regression model created in part (d) with an accuracy of 62.5%.

(f)
```{r}
Weeklyqda_fit <- qda(Direction ~ Lag2, data = Weekly, subset = train)
Weeklyqda_pred <- predict(Weeklyqda_fit, Weekly_2009)$class
table(Weeklyqda_pred, Direction_2009)

mean(Weeklyqda_pred == Direction_2009)
```
After using QDA to create a model, the model predicted correctly 58.65% of the time. However, this model appears to have not have predicted the downward trend at all.

(g)
```{r}
library(class)
Week_train <- as.matrix(Weekly$Lag2[train])
Week_test <- as.matrix(Weekly$Lag2[!train])
train_Direction <- Weekly$Direction[train]
set.seed(1)
Weekknn_pred=knn(Week_train,Week_test,train_Direction,k=1)
table(Weekknn_pred,Direction_2009)

mean(Weekknn_pred == Direction_2009)
```
After creating a model using KNN with K=1, we can see that this model lowered the accuracy to only 50%.

(h)
```{r}
library(e1071)
weeklynb_fit <- naiveBayes(Direction~Lag2 ,data=Weekly ,subset=train)
weeklynb_fit
```
```{r}
weeklynb_class <- predict(weeklynb_fit ,Weekly_2009)
table(weeklynb_class ,Direction_2009)
```
```{r}
mean (weeklynb_class == Direction_2009)
```
After fitting a naive Bayes model to the Weekly data set, we can see that it produced the exact same results as the QDA model we fit in part (f). Both models had an accuracy of 58.65%, which is still lower than the 62.5% acheived by the logistic regression model.

(i)
The logistic regression model appears to provide the best results with being able to correctly predict the outcome 62.5% of the time.

## Bonus question: ISL Exercise 4.8.13 Part (j) (30pts)
```{r}
set.seed(1)
Weekknn_pred2 <- knn(Week_train,Week_test,train_Direction,k=20)
table(Weekknn_pred2,Direction_2009)
```
```{r}
mean(Weekknn_pred2 == Direction_2009)
```
After creating a model using KNN with K=20, we able to increase the accuracy to 58.65%, up from 50% from the K=1 model created in part (g)
```{r}
Weeklyqda_fit2 <- qda(Direction ~ Lag2^2, data = Weekly, subset = train)
Weeklyqda_pred2 <- predict(Weeklyqda_fit2, Weekly_2009)$class
table(Weeklyqda_pred2, Direction_2009)
```
```{r}
mean(Weeklyqda_pred2 == Direction_2009)
```
Using Lag2^2 in a QDA model, gave us an accuracy of 58.65%. This is the same accuracy as the QDA model created in part (f).
```{r}
Weeklylda_fit2<-lda(Direction~Lag2:Lag3, data=Weekly,family=binomial, subset=train)
Weeklylda_pred2<-predict(Weeklylda_fit2, Weekly_2009)
table(Weeklylda_pred2$class, Direction_2009)
```
```{r}
mean(Weeklylda_pred2$class == Direction_2009)
```
This LDA model with Lag2:Lag3 as the predictor, gave us an accuracy of 58.65% which is lower than the previous LDA model created in part (e).

## Bonus question: ISL Exercise 4.8.4 (30pts)

